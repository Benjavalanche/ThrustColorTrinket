/*
ThrustColor
Thrust controlled color pixels for a quad!
by Benji Vinick

Pin Schemes:
For Trinket:
The neopixel pin can be #4->pixpinpixpin shuld be 4
Input from throttle is #2->throtpin 2
(analog reads on the trinket get confusing with the numvering when doing 1, 2, or 4, so I just stuck with 3
see: https://learn.adafruit.com/introducing-trinket/programming-with-arduino-ide

*/

int chan; // initialize the channel variable
int throt; //intiialize the throttle variable
#define pixpin 4  //@@@@@@@@@@@@@ set the pin where the pixels are attached
#define throtpin 2 //@@@@@@@@@@@@@ set the pin that reads the throttle (or the analog read for testing)
//You can read an analog voltage from digital #2 (called Analog 1), digital #3 (called Analog 3) and digital #4 (called Analog 2)
// ColorPlot: 1  2   3   4  5    6      plot the colors with 6 points
int cp[] ={  0, 2, 20, 30, 50, 90, 100 };
int brightness = 50  ; //@@@@@@@@@@@@@ set brightness
int strandlength = 24  ; //set the number of pixel in the LED strip
#include <Adafruit_NeoPixel.h>
Adafruit_NeoPixel strip = Adafruit_NeoPixel(strandlength, pixpin, NEO_GRB + NEO_KHZ800);
int red;
int blue;
int green;

void setup() {

  pinMode(throtpin, INPUT); // Set our input pins as such
 // Serial.begin(9600); // Start the serial connection only for the boards that work for it
  strip.begin();
  strip.show(); // Initialize all pixels to 'off'
  strip.setBrightness(brightness); // set the brighness
}
void loop() {
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//switch the next two lines for the two lines after when testing
   chan = pulseIn(throtpin, HIGH, 25000); // Read the pulse width of 
  throt = map(chan, 1056, 1914, 0, 100);
//  int testin =analogRead(throtpin);
 // throt = map(testin, 0, 1028, 0, 100);
 //@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 
 /* When troubleshooting or testing non-trinket boards, the next section can be put in to see what is going on:
 Serial.print("Raw:");
  Serial.print(chan);   
  Serial.print("   Throttle:");
  Serial.print(throt);
  Serial.print("  Red:");
  Serial.print(red);
  Serial.print("  Green:");
  Serial.print(green);
  Serial.print("  Blue");
  Serial.println(blue);
*/

  //Red Plot:
  if (throt < cp[1]) { 
    red = 0  ;  
  }
  else if (throt < cp[2])
  {
    red = map(throt, 0, cp[2], 0, 255);
  }
  else if (throt < cp [4] ){
    red = 255;
  }
  else if (throt > cp[4], throt < cp[5]){
    red = map(throt, cp[4], cp[5], 255, 1);
  }
  else if (throt > cp[5]){
    red = 0 ; 

  }

  //Green Plot:
  if (throt < cp[2]) { 
    green = 0     ; 
  }
  else if (throt < cp[4])
  {
    green = map(throt, cp[2], cp[4], 0, 255);
  }
  else if (throt < cp[5]){
    green = map(throt, cp[4], cp[6], 255, 1);
  }
  else if (throt > cp[5]){
    green = 0  ;  
  }

  //Blue Plot:
  if (throt < cp[4]) { 
    blue = 0   ;   
  }
  else if (throt < cp[5])
  {
    blue = map(throt, cp[4], cp[5], 0, 255);
  }
  else if (throt > cp[5]){
    blue = 255;
  }
  //red->orange->yellow->blue
  for (int y=0; y<strandlength; y++){
    strip.setPixelColor(y, red, green, blue);
    strip.show();
  }
  delay(1);
}
